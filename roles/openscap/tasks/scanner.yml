- name: Creating temporary file placeholder for scan guide
  tempfile:
    state: directory
    prefix: 'openscapguide'
  register: openscap_guide

- name: Creating temporary file placeholder for scan results
  tempfile:
    state: file
    prefix: 'openscap'
    suffix: '.html'
  register: openscap_results

- name: Fetching OpenSCAP security guide archive
  unarchive:
    src: "https://github.com/OpenSCAP/scap-security-guide/releases/download/v0.1.36/scap-security-guide-0.1.36-oval-5.10.zip"
    dest: "{{ openscap_guide.path }}"
    remote_src: yes

# Sample CentOS 7 PCI-DSS scan
# openscap_xccdf_id: scap_org.open-scap_cref_ssg-rhel7-xccdf-1.2.xml
# openscap_profile: xccdf_org.ssgproject.content_profile_pci-dss
# openscap_ds_path: /usr/share/xml/scap/ssg/content/ssg-centos7-ds.xml
- name: Running OpenSCAP scan
  shell: |
    oscap xccdf eval \
      --report="{{ openscap_results.path }}" \
      --fetch-remote-resources \
      --xccdf-id="{{ openscap_xccdf_id }}" \
      --profile="{{ openscap_profile }}"  \
      {{ openscap_guide.path }}/scap-security-guide-0.1.36-oval-5.10/{{ openscap_ds_path }}
  ignore_errors: yes

- name: Downloading OpenSCAP scan report
  fetch:
    src: "{{ openscap_results.path }}"
    dest: "/tmp/openscap-{{ inventory_hostname }}.html"
    flat: yes

- name: Uploading OpenSCAP scan to AWS S3
  aws_s3:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    bucket: beltrix
    object: "zt-scans/openscap-{{ inventory_hostname }}.html"
    src: "/tmp/openscap-{{ inventory_hostname }}.html"
    mode: put
    permission:
    - public-read
  delegate_to: localhost
  register: openscap_s3_path

- name: Update ManageIQ instance with OpenSCAP scan result URL
  uri:
    url: "{{ cloudforms.href }}/custom_attributes"
    validate_certs: no
    method: POST
    user: "{{ cloudforms_api_username }}"
    password: "{{ cloudforms_api_password }}"
    body:
      action: add
      resources:
      - name: OpenSCAP Report
        value: "https://s3.amazonaws.com/beltrix/zt-scans/openscap-{{ inventory_hostname }}.html"
        source: EVM
        section: Compliance
    force_basic_auth: yes
    status_code: 200
    body_format: json
  delegate_to: localhost

- name: Update ManageIQ instance with OpenSCAP scan result timestamp
  uri:
    url: "{{ cloudforms.href }}/custom_attributes"
    validate_certs: no
    method: POST
    user: "{{ cloudforms_api_username }}"
    password: "{{ cloudforms_api_password }}"
    body:
      action: add
      resources:
      - name: OpenSCAP Report Timestamp
        value: "{{ ansible_date_time.iso8601 }}"
        source: EVM
        section: Compliance
    force_basic_auth: yes
    status_code: 200
    body_format: json
  delegate_to: localhost

